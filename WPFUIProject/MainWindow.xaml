<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPFUIProject"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Class="WPFUIProject.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800"
		Background="{DynamicResource Brush_Panel_BG_Normal_Normal}"
		Foreground="{DynamicResource Brush_Panel_FG_Normal_Normal}"
		FontSize="16">
	<Window.Resources>


		<Style TargetType="{x:Type Button}" BasedOn="{StaticResource StyleButton}"/>
		<Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource StyleGroupBox}">
			<Setter Property="Margin" Value="8 4"/>
		</Style>
		<Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource StyleTextBox}"/>

		<Style x:Key="FocusVisual2">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle StrokeDashArray="1 2" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" Margin="2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#FFF0F0F0" Offset="0.0"/>
			<GradientStop Color="#FFE5E5E5" Offset="1.0"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="ComboBox.Static.Border" Color="#F00"/>
		<SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
		<SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
		<SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
		<SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
		<SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
		<LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#FFECF4FC" Offset="0.0"/>
			<GradientStop Color="#FFDCECFC" Offset="1.0"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
		<SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
		<SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
		<LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#FFEBF4FC" Offset="0.0"/>
			<GradientStop Color="#FFDCECFC" Offset="1.0"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
		<SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
		<LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#FFDAECFC" Offset="0.0"/>
			<GradientStop Color="#FFC4E0FC" Offset="1.0"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
		<SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
		<SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
		<LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#FFDAEBFC" Offset="0.0"/>
			<GradientStop Color="#FFC4E0FC" Offset="1.0"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
		<SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
		<SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
		<SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
		<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
		<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
		<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
		<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
		<SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
		<Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="ClickMode" Value="Press"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Border x:Name="templateRoot" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
							<Border x:Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" SnapsToDevicePixels="true" Margin="0" HorizontalAlignment="Right" BorderThickness="1" BorderBrush="Transparent">
								<Path x:Name="arrow" VerticalAlignment="Center" Margin="0" HorizontalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"/>
							</Border>
						</Border>
						<ControlTemplate.Triggers>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
									<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
									<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
									<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource Brush_TextBox_BG_Normal_Normal}"/>
								<Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource Brush_TextBox_Border_Normal_Normal}"/>
								<Setter Property="Background" TargetName="splitBorder" Value="{DynamicResource Brush_Control_BG_Normal_Normal}"/>
								<Setter Property="BorderBrush" TargetName="splitBorder" Value="{DynamicResource Brush_Control_Border_Normal_Normal}"/>
							</MultiDataTrigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Fill" TargetName="arrow" Value="{DynamicResource Brush_Control_FG_Normal_PointIn}"/>
							</Trigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
									<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource Brush_Control_BG_Normal_PointIn}"/>
								<Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource Brush_Control_Border_Normal_PointIn}"/>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
									<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource Brush_Control_BG_Normal_PointIn}"/>
								<Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource Brush_Control_Border_Normal_PointIn}"/>
								<Setter Property="Background" TargetName="splitBorder" Value="{DynamicResource Brush_Control_BG_Normal_PointIn}"/>
								<Setter Property="BorderBrush" TargetName="splitBorder" Value="{DynamicResource Brush_Control_Border_Normal_PointIn}"/>
							</MultiDataTrigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Fill" TargetName="arrow" Value="{DynamicResource Brush_Control_FG_Normal_PointIn}"/>
								<Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource Brush_Control_BG_Normal_PointIn}"/>
								<Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource Brush_Control_Border_Normal_PointIn}"/>
							</Trigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
									<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Background" TargetName="splitBorder" Value="{DynamicResource Brush_Control_BG_Normal_PointIn}"/>
								<Setter Property="BorderBrush" TargetName="splitBorder" Value="{DynamicResource Brush_Control_Border_Normal_PointIn}"/>
							</MultiDataTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
							</Trigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
									<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource Brush_Control_BG_Disable_Normal}"/>
								<Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource Brush_Control_Border_Disable_Normal}"/>
								<Setter Property="Background" TargetName="splitBorder" Value="{DynamicResource Brush_Control_BG_Disable_Normal}"/>
								<Setter Property="BorderBrush" TargetName="splitBorder" Value="{DynamicResource Brush_Control_Border_Disable_Normal}"/>
							</MultiDataTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
			<Grid x:Name="templateRoot" SnapsToDevicePixels="true">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
				</Grid.ColumnDefinitions>
				<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
					<Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
						<Border x:Name="dropDownBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}">
							<ScrollViewer x:Name="DropDownScrollViewer">
								<Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
									<Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
										<Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
									</Canvas>
									<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
								</Grid>
							</ScrollViewer>
						</Border>
					</Themes:SystemDropShadowChrome>
				</Popup>
				<ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
				<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
			</Grid>
			<ControlTemplate.Triggers>
				<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
					<Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
					<Setter Property="Color" TargetName="shadow" Value="#71000000"/>
				</Trigger>
				<Trigger Property="HasItems" Value="false">
					<Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
				</Trigger>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsGrouping" Value="true"/>
						<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
					</MultiTrigger.Conditions>
					<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
				</MultiTrigger>
				<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
					<Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
					<Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
		<SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
		<Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="AllowDrop" Value="true"/>
			<Setter Property="MinWidth" Value="0"/>
			<Setter Property="MinHeight" Value="0"/>
			<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
			<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TextBox}">
						<ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
			<Grid x:Name="templateRoot" SnapsToDevicePixels="true">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
				</Grid.ColumnDefinitions>
				<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
					<Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
						<Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
							<ScrollViewer x:Name="DropDownScrollViewer">
								<Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
									<Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
										<Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
									</Canvas>
									<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
								</Grid>
							</ScrollViewer>
						</Border>
					</Themes:SystemDropShadowChrome>
				</Popup>
				<ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
				<Border x:Name="border" Background="{DynamicResource Brush_TextBox_BG_Normal_Normal}" Margin="{TemplateBinding BorderThickness}">
					<TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
				</Border>
			</Grid>
			<ControlTemplate.Triggers>
				<Trigger Property="IsEnabled" Value="false">
					<Setter Property="Opacity" TargetName="border" Value="0.56"/>
				</Trigger>
				<Trigger Property="IsKeyboardFocusWithin" Value="true">
					<Setter Property="Foreground" Value="Black"/>
				</Trigger>
				<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
					<Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
					<Setter Property="Color" TargetName="shadow" Value="#71000000"/>
				</Trigger>
				<Trigger Property="HasItems" Value="false">
					<Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
				</Trigger>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsGrouping" Value="true"/>
						<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
					</MultiTrigger.Conditions>
					<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
				</MultiTrigger>
				<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
					<Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
					<Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
		<Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual2}"/>
			<Setter Property="Background" Value="{DynamicResource Brush_Control_BG_Normal_Normal}"/>
			<Setter Property="BorderBrush" Value="{DynamicResource Brush_Control_Border_Normal_Normal}"/>
			<Setter Property="Foreground" Value="{DynamicResource Brush_Control_FG_Normal_Normal}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
			<Setter Property="Padding" Value="6,3,5,3"/>
			<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
			<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
			<Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
			<Style.Triggers>
				<Trigger Property="IsEditable" Value="true">
					<Setter Property="IsTabStop" Value="false"/>
					<Setter Property="Padding" Value="2"/>
					<Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
				</Trigger>
			</Style.Triggers>
		</Style>
		<!--<SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
		<SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
		<SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>-->
		

	</Window.Resources>
	<ScrollViewer>
		<StackPanel >
			<GroupBox Header="Button">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="1*"/>
						<ColumnDefinition Width="1*"/>
						<ColumnDefinition Width="1*"/>
						<ColumnDefinition Width="1*"/>
						<ColumnDefinition Width="1*"/>
						<ColumnDefinition Width="1*"/>
					</Grid.ColumnDefinitions>
					<Button Grid.Column="0" Style="{StaticResource StyleButton}" Content="Normal"/>
					<Button Grid.Column="1" IsEnabled="False" Content="Disable"/>
					<Button Grid.Column="2" Style="{StaticResource StyleButton}" Content="Toggle"/>
					<Button Grid.Column="3" Content="Important" />
					<Button Grid.Column="4" Content="Waning" />
					<Button Grid.Column="5" Content="Error" />
				</Grid>
			</GroupBox>

			<GroupBox Header="ComboBox">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="1*"/>
						<ColumnDefinition Width="1*"/>
						<ColumnDefinition Width="1*"/>
						<ColumnDefinition Width="1*"/>
						<ColumnDefinition Width="1*"/>
						<ColumnDefinition Width="1*"/>
					</Grid.ColumnDefinitions>
					<ComboBox Style="{DynamicResource ComboBoxStyle1}">
						<ComboBoxItem Content="1"/>
						<ComboBoxItem Content="2"/>
						<ComboBoxItem Content="3"/>
						<ComboBoxItem Content="4"/>
					</ComboBox>

					<ComboBox Style="{DynamicResource ComboBoxStyle1}" Grid.Column="1" IsEditable="True">
						<ComboBoxItem Content="1"/>
						<ComboBoxItem Content="2"/>
						<ComboBoxItem Content="3"/>
						<ComboBoxItem Content="4"/>
					</ComboBox>
				</Grid>
			</GroupBox>

			<GroupBox Header="TextBox">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="1*"/>
						<ColumnDefinition Width="1*"/>
						<ColumnDefinition Width="1*"/>
						<ColumnDefinition Width="1*"/>
						<ColumnDefinition Width="1*"/>
						<ColumnDefinition Width="1*"/>
					</Grid.ColumnDefinitions>
					<TextBox></TextBox>
					<TextBox Grid.Column="1" IsEnabled="False">123</TextBox>

				</Grid>
			</GroupBox>
		</StackPanel>
	</ScrollViewer>
</Window>
